apiVersion: v1
kind: Service
metadata:
  name: test-app-summon-sidecar
  labels:
    app: test-app-summon-sidecar
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: test-app-summon-sidecar
  type: {{ .Values.global.appServiceType }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-app-summon-sidecar
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-app-summon-sidecar
  name: test-app-summon-sidecar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-summon-sidecar
  template:
    metadata:
      labels:
        app: test-app-summon-sidecar
    spec:
      serviceAccountName: test-app-summon-sidecar
      containers:
      - image: {{ printf "%s:%s" .Values.app.image.repository .Values.app.image.tag }}
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        name: test-app
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /pets
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
        env:
          - name: CONJUR_AUTHN_TOKEN_FILE
            value: /run/conjur/access-token
        envFrom:
        - configMapRef:
            name: {{ .Values.global.conjur.conjurConnConfigMap }}
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
            readOnly: true
      - image: {{ printf "%s:%s" .Values.authnClient.image.repository .Values.authnClient.image.tag }}
        imagePullPolicy: {{ .Values.authnClient.image.pullPolicy }}
        name: authenticator
        env:
          - name: CONTAINER_MODE
            value: sidecar
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CONJUR_AUTHN_LOGIN
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.conjur.authnConfigMap.name }}
                key: conjurAuthnLogin
        envFrom:
        - configMapRef:
            name: {{ .Values.global.conjur.conjurConnConfigMap }}
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
      imagePullSecrets:
        - name: dockerpullsecret
      volumes:
        - name: conjur-access-token
          emptyDir:
            medium: Memory

apiVersion: v1
kind: Service
metadata:
  name: test-app-secretless
  labels:
    app: test-app-secretless
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: test-app-secretless
  type: {{ .Values.global.appServiceType }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-app-secretless
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-app-secretless
  name: test-app-secretless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-secretless
  template:
    metadata:
      labels:
        app: test-app-secretless
    spec:
      serviceAccountName: test-app-secretless
      containers:
      - image: {{ printf "%s:%s" .Values.app.image.repository .Values.app.image.tag }}
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        name: test-app
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /pets
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
        env:
          - name: DB_URL
            value: postgresql://localhost:5432/test_app
      - image: {{ printf "%s:%s" .Values.secretless.image.repository .Values.secretless.image.tag }}
        imagePullPolicy: {{ .Values.secretless.image.pullPolicy }}
        name: secretless
        args: ["-f", "/etc/secretless/secretless-config.yml"]
        ports:
        - containerPort: 5432
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CONJUR_AUTHN_LOGIN
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.conjur.authnConfigMap.name }}
                key: conjurAuthnLogin
        envFrom:
        - configMapRef:
          name: {{ .Values.conjur.authnConfigMap.name }}
        envFrom:
        - configMapRef:
            name: {{ .Values.global.conjur.conjurConnConfigMap }}
        volumeMounts:
        - name: config
          mountPath: /etc/secretless
          name: config
          readOnly: true
      imagePullSecrets:
        - name: dockerpullsecret
      volumes:
      - name: config
        configMap:
          name: secretless-config

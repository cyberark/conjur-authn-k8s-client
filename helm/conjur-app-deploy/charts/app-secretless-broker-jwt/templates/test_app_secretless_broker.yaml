apiVersion: v1
kind: Service
metadata:
  name: test-app-secretless-broker
  labels:
    app: test-app-secretless-broker
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: test-app-secretless-broker
  type: {{ .Values.global.appServiceType }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-secretless-app-jwt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-app-secretless-broker
  name: test-app-secretless-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-secretless-broker
  template:
    metadata:
      labels:
        app: test-app-secretless-broker
    spec:
      serviceAccountName: test-secretless-app-jwt
      containers:
      - image: {{ printf "%s:%s" .Values.app.image.repository .Values.app.image.tag }}
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        name: test-app
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /pets
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
        env:
          - name: DB_URL
            value: postgresql://localhost:5432/test_app
      - image: {{ printf "%s:%s" .Values.secretless.image.repository .Values.secretless.image.tag }}
        imagePullPolicy: {{ .Values.secretless.image.pullPolicy }}
        name: secretless
        args: ["-f", "/etc/secretless/secretless_config.yaml"]
        ports:
        - containerPort: 5432
        env:
          - name: CONTAINER_MODE
            value: sidecar
          - name: JWT_TOKEN_PATH
            value: /var/run/secrets/tokens/jwt
        envFrom:
        - configMapRef:
            name: {{ .Values.global.conjur.conjurConnConfigMap }}
        volumeMounts:
        - name: config
          mountPath: /etc/secretless
          readOnly: true
        - name: conjur-access-token
          mountPath: /run/conjur
        - name: conjur-certs
          mountPath: /etc/conjur/ssl
        - mountPath: /var/run/secrets/tokens
          name: jwt-token
      {{- if eq .Values.app.platform "kubernetes" }}
      imagePullSecrets:
        - name: dockerpullsecret
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: secretless-config-configmap
      - name: conjur-access-token
        emptyDir:
          medium: Memory
      - name: conjur-certs
        emptyDir:
          medium: Memory
      - name: jwt-token
        projected:
          sources:
            - serviceAccountToken:
                path: jwt
                expirationSeconds: 6000
                audience: conjur

#!/usr/bin/env bash
set -uo pipefail

source utils.sh

if [[ "$CONJUR_PLATFORM" == "kind" ]]; then
  RUN_CLIENT_CONTAINER="false"
else
  RUN_CLIENT_CONTAINER="true"
fi

check_env_var RUN_CLIENT_CONTAINER

if [[ "${CONJUR_OSS_HELM_INSTALLED}" == "true" ]]; then
  if [[ "$RUN_CLIENT_CONTAINER" == "true" ]]; then
    run_command_with_platform "
      ./log_namespaces.sh
      ./cleanup_helm.sh
      ./cleanup_namespaces.sh

      if [[ '$PLATFORM' == 'openshift' ]]; then
        oc logout
      fi

      rm -rf 'temp/conjur-oss-helm-chart-$UNIQUE_TEST_ID'
      rm -rf 'temp/sidecar-injector-$UNIQUE_TEST_ID'
    "
  else 
    ./log_namespaces.sh
    ./cleanup_helm.sh
    ./cleanup_namespaces.sh
    rm -rf "temp/conjur-oss-helm-chart-$UNIQUE_TEST_ID"
    rm -rf "temp/sidecar-injector-$UNIQUE_TEST_ID"
  fi

elif [[ "$CONJUR_PLATFORM" == "gke" ]]; then
  run_command_with_platform "
    ./log_namespaces.sh
    ./cleanup_helm.sh

    pushd 'temp/kubernetes-conjur-deploy-$UNIQUE_TEST_ID'
      ./stop
    popd

    ./cleanup_namespaces.sh
  "

  rm -rf "temp/kubernetes-conjur-deploy-$UNIQUE_TEST_ID"
  rm -rf "temp/sidecar-injector-$UNIQUE_TEST_ID"

elif [[ "$CONJUR_PLATFORM" == "jenkins" ]]; then
  pushd "temp/conjur-intro-$UNIQUE_TEST_ID" > /dev/null
    ./bin/dap --stop
    docker run --rm -w /dap-intro -v "$(pwd):/dap-intro" alpine ash -c "rm -rf system"
  popd > /dev/null

  run_command_with_platform "
    ./log_namespaces.sh
    ./cleanup_helm.sh
    ./cleanup_namespaces.sh

    if [[ '$PLATFORM' == 'openshift' ]]; then
      oc logout
    fi
  "

  rm -rf "temp/conjur-intro-$UNIQUE_TEST_ID"
  rm -rf "temp/sidecar-injector-$UNIQUE_TEST_ID"

fi

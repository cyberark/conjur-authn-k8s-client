---
apiVersion: v1
kind: Service
metadata:
  name: test-app-with-host-outside-apps-branch-summon-init
  labels:
    app: test-app-with-host-outside-apps-branch-summon-init
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: test-app-with-host-outside-apps-branch-summon-init
  type: {{ SERVICE_TYPE }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oc-test-app-with-host-outside-apps-branch-summon-init
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: test-app-with-host-outside-apps-branch-summon-init
  name: test-app-with-host-outside-apps-branch-summon-init
spec:
  replicas: 1
  selector:
    app: test-app-with-host-outside-apps-branch-summon-init
  template:
    metadata:
      labels:
        app: test-app-with-host-outside-apps-branch-summon-init
    spec:
      serviceAccountName: oc-test-app-with-host-outside-apps-branch-summon-init
      containers:
      - image: {{ TEST_APP_DOCKER_IMAGE }}
        imagePullPolicy: Always
        name: test-app
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /pets
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
        env:
          - name: CONJUR_APPLIANCE_URL
            value: "{{ CONJUR_APPLIANCE_URL }}"
          - name: CONJUR_ACCOUNT
            value: {{ CONJUR_ACCOUNT }}
          - name: CONJUR_AUTHN_TOKEN_FILE
            value: /run/conjur/access-token
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              configMapKeyRef:
                name: {{ CONFIG_MAP_NAME }}
                key: ssl-certificate
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
            readOnly: true
      initContainers:
      - image: {{ AUTHENTICATOR_CLIENT_IMAGE }}
        imagePullPolicy: Always
        name: authenticator
        env:
          - name: CONTAINER_MODE
            value: init
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CONJUR_AUTHN_URL
            value: "{{ CONJUR_AUTHN_URL }}"
          - name: CONJUR_ACCOUNT
            value: {{ CONJUR_ACCOUNT }}
          - name: CONJUR_AUTHN_LOGIN
            value: "{{ CONJUR_AUTHN_LOGIN }}"
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              configMapKeyRef:
                name: {{ CONFIG_MAP_NAME }}
                key: ssl-certificate
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
      imagePullSecrets:
        - name: dockerpullsecret
      volumes:
        - name: conjur-access-token
          emptyDir:
            medium: Memory

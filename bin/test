#!/usr/bin/env bash

set -eox pipefail

rm -rf test
mkdir test

junit_output_file="test/junit.output"

rm -f "$junit_output_file"
touch "$junit_output_file"

echo "Building unit test image..."
docker build -f Dockerfile.test -t conjur-authn-k8s-client-test-runner:latest .

echo "Running unit tests..."
set +e
  docker run --rm -t conjur-authn-k8s-client-test-runner:latest \
             ./cmd/... \
             ./pkg/... \
             "-tags=integration,e2e" \
             | tee -a "$junit_output_file"
  # The -tags argument is passed to the `go test` command which is the ENTRYPOINT for the container (Dockerfile.test).
  # If -tags is not specified, the test runner will run just the tests that don't have a build tag specified.
  # If -tags contains only one tag, it'll run just the tests with that tag. Multiple tags can be specified
  # with a comma-separated list.
  echo "Unit test exit status: $?"
set -e

rm -f junit.xml

echo "Building junit image..."

docker build -f Dockerfile.junit -t conjur-authn-k8s-client-junit:latest .

echo "Creating junit report..."

docker run --rm \
  -v $PWD/test:/test \
  conjur-authn-k8s-client-junit:latest \
  bash -exc "
    cat ./junit.output | go-junit-report > ./junit.xml
  "
